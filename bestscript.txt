--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v73=0;local v74;while true do if (v73==0) then v74=v2(v0(v20,16));if v19 then local v97=v5(v74,v19);v19=nil;return v97;else return v74;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v75=(v22/(((41 + 58) -(56 + 41))^(v23-(1734 -(115 + 1562 + 56)))))%((373 -(268 + 103))^(((v24-1) -(v23-(1 + 0))) + (2 -1))) ;return v75-(v75%((280 -(37 + 242)) -0)) ;else local v76=2^(v23-(2 -1)) ;return (((v22%(v76 + v76))>=v76) and (1287 -(720 + 566))) or 0 ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (5 -3) );v18=v18 + 2 ;return (v40 * (181 + 75)) + v39 ;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + (6 -3) );v18=v18 + (8 -(7 -3)) ;return (v44 * (49836400 -33059184)) + (v43 * (67237 -(172 + 1529))) + (v42 * (206 + 35 + 15)) + v41 ;end local function v28()local v45=0 + 0 ;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (v45==(1336 -(175 + 1160))) then v48=841 -(694 + 146) ;v49=(v21(v47,1745 -(952 + 792) ,70 -50 ) * (2^(70 -38))) + v46 ;v45=1544 -(730 + 812) ;end if (v45==(1632 -(1555 + 77))) then v46=v27();v47=v27();v45=1;end if (v45==(3 -0)) then if (v50==(0 + (686 -(677 + 9)))) then if (v49==(0 -(0 + 0))) then return v51 * (520 -(176 + 344)) ;else local v98=0;while true do if ((0 + 0)==v98) then v50=3 -2 ;v48=(1581 -717) -(391 + 473) ;break;end end end elseif (v50==(235 + 1812)) then return ((v49==(487 -((1169 -(538 + 456)) + (723 -411)))) and (v51 * ((1 + 0)/(0 + 0)))) or (v51 * NaN) ;end return v8(v51,v50-(2794 -(1046 + 725)) ) * (v48 + (v49/((2 + 0)^((2145 -(16 + 799)) -(250 + 1028))))) ;end if (v45==2) then v50=v21(v47,21,(2514 -1641) -(538 + (2108 -(1789 + 15))) );v51=((v21(v47,25 + (19 -12) )==1) and  -(1 + 0)) or (3 -(1 + 1)) ;v45=3;end end end local function v29(v30)local v52;if  not v30 then v30=v27();if (v30==(654 -(475 + 179))) then return "";end end v52=v3(v16,v18,(v18 + v30) -(1 -0) );v18=v18 + v30 ;local v53={};for v66=2 -1 , #v52 do v53[v66]=v2(v1(v3(v52,v66,v66)));end return v6(v53);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=0 + 0 ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54==1) then v57=nil;v58=nil;v54=2 + 0 ;end if ((6 -4)~=v54) then else v59=nil;v60=nil;v54=3;end if (v54~=(7 -4)) then else v61=nil;v62=nil;v54=4;end if (0==v54) then v55=0;v56=nil;v54=1;end if (v54==(3 + 1)) then while true do if (v55==0) then v56=0;v57=nil;v55=1;end if (v55==2) then local v95=0;while true do if (v95==(0 + 0)) then v60=nil;v61=nil;v95=3 -2 ;end if (v95==1) then v55=13 -10 ;break;end end end if (v55==(1961 -(744 + 1216))) then v58=nil;v59=nil;v55=54 -(8 + 44) ;end if (v55~=3) then else v62=nil;while true do if (v56==1) then v60={v57,v58,nil,v59};v61=v27();v62={};v56=2 + 0 ;end if (v56==3) then for v103=1,v27() do v58[v103-1 ]=v33();end for v105=756 -(33 + 722) ,v27() do v59[v105]=v27();end return v60;end if (v56~=(39 -(23 + 14))) then else local v99=0;while true do if (v99~=0) then else local v107=86 -(6 + 80) ;while true do if (v107==0) then for v114=1,v61 do local v115=0;local v116;local v117;local v118;while true do if ((1373 -(399 + 973))~=v115) then else v118=nil;while true do if (v116~=(2 -1)) then else if (v117==1) then v118=v25()~=(0 + 0) ;elseif (v117==(2 + 0)) then v118=v28();elseif (v117==3) then v118=v29();end v62[v114]=v118;break;end if (v116==(0 -0)) then local v288=0;while true do if (v288==(1 + 0)) then v116=1 + 0 ;break;end if (0==v288) then v117=v25();v118=nil;v288=2 -1 ;end end end end break;end if (v115==0) then v116=1417 -(177 + 1240) ;v117=nil;v115=1 + 0 ;end end end v60[1577 -(1487 + 87) ]=v25();v107=1;end if (v107~=(329 -(204 + 124))) then else v99=3 -2 ;break;end end end if (v99==(1 + 0)) then for v108=754 -(554 + 199) ,v27() do local v109=0 -0 ;local v110;local v111;local v112;while true do if (v109~=(0 -0)) then else local v119=0;while true do if (v119~=1) then else v109=1;break;end if (v119==(1294 -(516 + 778))) then v110=0 -0 ;v111=nil;v119=2 -1 ;end end end if (v109~=(2 -1)) then else v112=nil;while true do if (v110==1) then while true do if (0~=v111) then else v112=v25();if (v21(v112,1866 -(341 + 1524) ,1 + 0 )~=0) then else local v301=0;local v302;local v303;local v304;local v305;while true do if (v301==1) then local v356=0;while true do if (v356==(733 -(633 + 99))) then v301=2 + 0 ;break;end if (v356~=(0 + 0)) then else v304=nil;v305=nil;v356=1;end end end if ((0 + 0)~=v301) then else local v357=0;while true do if (v357==(2 -1)) then v301=1;break;end if (v357~=(1626 -(308 + 1318))) then else v302=0 + 0 ;v303=nil;v357=3 -2 ;end end end if (v301==2) then while true do if (v302~=1) then else v305={v26(),v26(),nil,nil};if (v303==(0 + 0)) then local v432=0 + 0 ;local v433;local v434;while true do if ((491 -(134 + 357))==v432) then v433=1141 -(779 + 362) ;v434=nil;v432=1 + 0 ;end if (v432==1) then while true do if (v433==(1681 -(941 + 740))) then v434=142 -(65 + 77) ;while true do if (v434==(0 + 0)) then v305[1 + 2 ]=v26();v305[4]=v26();break;end end break;end end break;end end elseif (v303==(3 -2)) then v305[3]=v27();elseif (v303==(2 -0)) then v305[3]=v27() -(2^(29 -13)) ;elseif (v303~=(3 + 0)) then else local v484=0 -0 ;local v485;while true do if ((0 + 0)==v484) then v485=0;while true do if (v485==0) then v305[3]=v27() -((7 -5)^16) ;v305[4]=v26();break;end end break;end end end v302=2;end if (v302==(6 -3)) then if (v21(v304,1153 -(563 + 587) ,6 -3 )==(1 + 0)) then v305[4]=v62[v305[4]];end v57[v108]=v305;break;end if ((425 -(291 + 132))==v302) then local v408=0 + 0 ;while true do if (v408~=1) then else v302=3;break;end if (v408==0) then if (v21(v304,1,1)==(826 -(733 + 92))) then v305[2 + 0 ]=v62[v305[469 -(64 + 403) ]];end if (v21(v304,2,2)==1) then v305[3]=v62[v305[3]];end v408=1;end end end if (v302==(0 + 0)) then local v409=0 + 0 ;while true do if (v409==(0 -0)) then local v445=0 -0 ;while true do if (0~=v445) then else v303=v21(v112,2 + 0 ,1827 -(1644 + 180) );v304=v21(v112,11 -7 ,5 + 1 );v445=1;end if (v445~=(1972 -(1825 + 146))) then else v409=3 -2 ;break;end end end if (v409~=1) then else v302=1;break;end end end end break;end end end break;end end break;end if (v110==(0 -0)) then local v263=0;while true do if (v263==1) then v110=1;break;end if (0==v263) then local v289=0;while true do if (v289==(1267 -(1133 + 134))) then v111=0;v112=nil;v289=1020 -(264 + 755) ;end if (v289~=(1380 -(925 + 454))) then else v263=264 -(76 + 187) ;break;end end end end end end break;end end end v56=3;break;end end end if (0==v56) then local v100=1254 -(1250 + 4) ;while true do if (v100~=1) then else v59={};v56=2 -1 ;break;end if (v100==0) then v57={};v58={};v100=983 -(391 + 591) ;end end end end break;end end break;end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1 ;local function v72()local v77=v63;local v78=v64;local v79=v65;local v80=v32;local v81={};local v82={};local v83={};for v87=0,v71 do if ((v87>=v79) or (4908<=((94 + 24) -72))) then v81[v87-v79 ]=v70[v87 + ((980 + 167) -(873 + 273)) ];else v83[v87]=v70[v87 + (2 -1) ];end end local v84=(v71-v79) + 1 ;local v85;local v86;while true do local v88=0 + 0 ;while true do if ((3074<=4034) and (v88==(0 -0))) then local v96=0;while true do if (((1382 + 2843)>(2161 + 560)) and (v96==((2989 -1393) -(662 + 934)))) then v85=v77[v68];v86=v85[1 + 0 ];v96=1 -0 ;end if ((1464<(1274 + (1391 -(270 + 159)))) and ((1696 -(726 + 969))==v96)) then v88=1;break;end end end if ((3259>(308 + 187)) and (v88==(1 + (0 -0)))) then if ((v86<=(73 -(35 + 8))) or ((3486 -(144 + 892))<=2292)) then if ((v86<=(1419 -(434 + 57 + 914))) or ((1378 + 761)>(3746 -(227 + 272)))) then if (((1505 + 2528)>=(370 + 2824)) and (v86<=(201 -(194 + 1)))) then if ((v86<=2) or (1389>(5621 -3616))) then if ((4404>(1667 + 260)) and (v86<=(0 -0))) then local v120=0 -0 ;local v121;local v122;while true do if ((v120==1) or ((1525 -(270 + 746))>=(4421 -1102))) then while true do if (((5845 -4224)<=(1800 + 565)) and (v121==(0 + 0))) then v122=v85[262 -(245 + (1631 -(503 + 1113))) ];v83[v122]=v83[v122]();break;end end break;end if ((((0 -0) + 0)==v120) or ((1348 -(860 -(410 + 119)))==2634)) then v121=0 + 0 ;v122=nil;v120=1 + 0 ;end end elseif (((242 + (7030 -5607))<(215 + 2363)) and (v86==(3 -2))) then v83[v85[(6009 -4766) -(784 + 457) ]]=v85[34 -(8 + 23) ]~=(0 + 0) ;else local v124=0 -0 ;local v125;local v126;local v127;local v128;local v129;local v130;while true do if (((14574 -9714)>=(2075 -781)) and (v124==(1308 -(1295 + 12)))) then v127=nil;v128=nil;v124=1 + 1 ;end if (((19 + 2)<=(5341 -2659)) and (v124==(3 + 0))) then while true do if ((v125==0) or (1024>(10594 -8396))) then local v306=0 -0 ;while true do if (((11541 -7744)>=(8304 -4923)) and ((1 + 0)==v306)) then v125=1 -0 ;break;end if (((1191 -912)<=((1138 + 3604) -(745 + 344))) and (v306==(0 + 0))) then v126=0 -0 ;v127=nil;v306=1;end end end if ((((12174 -8950) + 882)>(9599 -5933)) and ((1187 -(1169 + 16))==v125)) then v130=nil;while true do if (((1 + (645 -(266 + 378)))==v126) or ((607 + 923)<=(336 + 385))) then for v385=v127,v69 do local v386=(58 -(24 + 34)) -0 ;local v387;while true do if (((10708 -7699)==(6147 -3138)) and (v386==(0 -0))) then v387=1238 -(501 + 737) ;while true do if ((v387==(0 + 0)) or ((1185 -(113 + 50))>(5876 -((2068 -(854 + 1025)) + 1435)))) then v130=v130 + 1 + (1943 -(1166 + 777)) ;v83[v385]=v128[v130];break;end end break;end end end break;end if (((3280 -(625 + (224 -124)))>=((44 + 6543) -4338)) and (v126==1)) then local v358=0;local v359;while true do if (((1918 + 1075)>2197) and (v358==(1781 -(1524 + 257)))) then v359=1377 -(951 + 426) ;while true do if (((1 + 0)==v359) or (((4683 -3016) -972)>=(4828 -(408 + 125)))) then v126=2;break;end if (((1392 -(596 + 745))==(34 + 17)) and (v359==(0 -0))) then local v446=0;while true do if ((4324==(6455 -2131)) and (v446==(764 -(665 + 99)))) then v69=(v129 + v127) -(403 -(210 + 192)) ;v130=1648 -(622 + 1026) ;v446=1 + 0 ;end if ((v446==(1 -0)) or (4753<=(3780 -(295 + 171 + (256 -171))))) then v359=1935 -(1515 + 419) ;break;end end end end break;end end end if (((3193 -(38 + 638))>(8968 -(7918 -(825 + 466)))) and (v126==0)) then local v360=0 -0 ;local v361;while true do if (((953 -(621 + 90))<(726 + 1477)) and (0==v360)) then v361=(218 -133) -(21 + 64) ;while true do if ((v361==(906 -((945 -(178 + 117)) + 255))) or (((3778 -2464) -(602 + 433))>=(10358 -6296))) then v126=1 -0 ;break;end if ((v361==(0 -0)) or (3848>(7431 -3406))) then local v447=0 -0 ;while true do if (((2570 -(641 + 207))>1179) and (v447==(1 + 0))) then v361=1 + 0 + 0 ;break;end if (((21477 -16482)==(6273 -(346 + 698 + 234))) and (v447==(0 -0))) then v127=v85[2];v128,v129=v80(v83[v127](v13(v83,v127 + (1 -0) ,v85[1 + 2 ])));v447=1;end end end end break;end end end end break;end if ((((668 + 299) -(162 + 472 + 332))==v125) or (542>(3279 -1833))) then local v307=0 + 0 ;while true do if ((v307==(3 -2)) or (1764==3069)) then v125=2;break;end if ((v307==0) or (((9332 -6214) -(540 + 3))<=(3903 -2347))) then v128=nil;v129=nil;v307=1;end end end end break;end if (((4477 -(776 + 702))<=(2865 + 318)) and ((1626 -(887 + 737))==v124)) then v129=nil;v130=nil;v124=110 -(66 + 41) ;end if (((245 + 234)<(5251 -(2903 -(10 + 131)))) and (v124==0)) then v125=0 + 0 ;v126=nil;v124=1 -(930 -(152 + 778)) ;end end end elseif ((v86<=(5 -1)) or (1587==(4280 -2820))) then if (((507 -(129 + 16))<(7242 -4078)) and (v86>(1 + 2))) then local v131=(0 -0) -0 ;local v132;local v133;local v134;local v135;local v136;while true do if ((v131==(1739 -(212 + (3611 -2085)))) or ((2498 + (1171 -806))>=(682 + 2518))) then v134=nil;v135=nil;v131=8 -6 ;end if ((v131==(1 + 1)) or ((958 -215)==(2997 + 167))) then v136=nil;while true do if (((3365 -(140 + 45))>=346) and (v132==(1475 -(708 + 766)))) then local v308=0 -(1166 -(287 + 879)) ;while true do if (((4235 -(1113 + 55 + 34))<=(12047 -8039)) and (v308==(0 + 0))) then v135=nil;v136=nil;v308=1 + 0 ;end if (((8423 -4917)>=(2741 -1331)) and (v308==1)) then v132=2 + 0 ;break;end end end if ((v132==(0 -0)) or ((7146 -4018)<(3828 -2028))) then v133=0 + 0 ;v134=nil;v132=2 -1 ;end if (((1258 + 955 + 2210)>=(4194 -(209 + 1776))) and (v132==(4 -2))) then while true do if ((v133==(2 + 0)) or ((1637 -1247)==492)) then for v388=1 -0 ,v85[1105 -(881 + 220) ] do local v389=(1339 -(722 + 617)) -0 ;local v390;local v391;while true do if ((2588==(3610 -(439 + 583))) and (v389==(1 + 0))) then while true do if (((3607 -(1186 + 107))>(2559 -602)) and (v390==1)) then if ((v391[1 -0 ]==(185 -(57 + 91))) or ((2972 -(260 + 1455))>2034)) then v136[v388-(1 + 0) ]={v83,v391[491 -(292 + 196) ]};else v136[v388-(1 + 0) ]={v36,v391[1413 -(58 + 266 + 1086) ]};end v82[ #v82 + (1888 -(827 + 1060)) ]=v136;break;end if ((1490<=(3676 -1292)) and (v390==(0 -0))) then local v458=0 + 0 ;while true do if ((v458==(460 -(80 + 379))) or ((1193 + 3476)<(6237 -1827))) then v390=1 -0 ;break;end if ((v458==(0 + (79 -(20 + 59)))) or ((2585 -(15 + 312))<(158 + 219))) then v68=v68 + 1 + 0 ;v391=v77[v68];v458=1;end end end end break;end if ((v389==(719 -(203 + (826 -310)))) or ((399 -265)>=(2395 -703))) then v390=0 + 0 ;v391=nil;v389=1 + 0 ;end end end v83[v85[2]]=v34(v134,v135,v37);break;end if (((88 + 1635)>=(547 + 146)) and ((887 -((188 -94) + 793))==v133)) then local v363=0 -0 ;local v364;while true do if ((v363==(0 -0)) or (((5323 -3686) -(428 + 329))>=(5862 -(267 + 1010)))) then v364=0;while true do if (((1 -0)==v364) or (154>(7459 -3076))) then v133=1;break;end if (((0 -0)==v364) or ((1333 -(219 + 273))>3633)) then local v448=1075 -(564 + 511) ;while true do if (((1693 -(2242 -1720))<(5271 -3635)) and (v448==(1 + 0))) then v364=1 + 0 ;break;end if (((3459 -(1007 + 333))<=(4745 -(358 + 528 + 335))) and (v448==(0 + 0))) then v134=v78[v85[11 -8 ]];v135=nil;v448=1 + 0 ;end end end end break;end end end if ((v133==(162 -(22 + (377 -238)))) or (1819==(3302 -622))) then local v365=0 -0 ;while true do if (((4748 -(1092 + 646))>(639 + 109)) and (v365==(1 + (0 -0)))) then v133=1233 -(173 + 1058) ;break;end if ((((8991 + 3282) -9251)<(3736 + 617)) and (v365==(0 -0))) then v136={};v135=v10({},{__index=function(v410,v411)local v416=0;local v417;local v418;local v419;while true do if ((v416==(632 -(377 + 254))) or ((1903 + 1956)>(966 + 3235))) then v419=nil;while true do if (((488 + 527)<=4798) and (v417==(0 -0))) then local v480=0 -0 ;while true do if ((2412==(3761 -(69 + 1280))) and (v480==(669 -(509 + 159)))) then v417=189 -(39 + 149) ;break;end if ((2929==(2526 + 403)) and (v480==((382 -(280 + 102)) -0))) then v418=0 -0 ;v419=nil;v480=1 + 0 ;end end end if ((v417==(2 -1)) or (1300==(4600 -2615))) then while true do if (((4963 -(338 + 123))==(13043 -8541)) and (v418==(1365 -(31 + 1334)))) then local v488=0 -0 ;local v489;while true do if (((0 + 0)==v488) or (2006>4975)) then v489=0;while true do if (((1052 + 1463)>(3706 -(1192 + 478))) and ((0 + 0)==v489)) then v419=v136[v411];return v419[4 -3 ][v419[659 -(280 + 109 + 268) ]];end end break;end end end end break;end end break;end if (((16 + 287)<=((3098 -(15 + 606)) + 1506)) and ((0 + 0)==v416)) then v417=0;v418=nil;v416=1 + 0 ;end end end,__newindex=function(v410,v411,v412)local v420=0 + 0 ;local v421;local v422;local v423;while true do if ((v420==(349 -(225 + 124))) or ((1690 -391)>=(6611 -2049))) then v421=0 + 0 ;v422=nil;v420=1;end if (((2393 -1424)<=(8147 -4622)) and (v420==(1905 -(1816 + 88)))) then v423=nil;while true do if ((((1338 -(147 + 577)) + 1729)==(3515 -(195 + (2209 -1232)))) and (v421==(0 -0))) then local v481=0;while true do if ((v481==(880 -(874 + 6))) or ((6775 -4196)<1000)) then v422=1099 -(17 + 1082) ;v423=nil;v481=1117 -(1033 + 83) ;end if (((2283 -(474 + 1204))<=(3062 + 170)) and (v481==1)) then v421=1;break;end end end if (((5623 -(1124 + 501))>=1097) and ((4 -3)==v421)) then while true do if ((4061>=3301) and (v422==(0 + 0))) then v423=v136[v411];v423[1][v423[3 -1 ]]=v412;break;end end break;end end break;end end end});v365=882 -(216 + 665) ;end end end end break;end end break;end if ((v131==(0 + 0)) or (((1825 -(75 + 79)) + 1052)<(4027 -1424))) then v132=1254 -(395 + 859) ;v133=nil;v131=2 -(1155 -(340 + 814)) ;end end elseif ((v85[2]==v83[v85[4 + 0 + (1700 -(1036 + 664)) ]]) or ((3902 -1792)<=(792 + 181))) then v68=v68 + 1 ;else v68=v85[3 + (0 -0) ];end elseif ((((676 + 5481) -(80 + 12 + 1671))>(4310 -(714 + 175))) and (v86>(2 + 3))) then local v137=0;local v138;local v139;while true do if (((96 + 736 + 1664)==((1726 -469) + 1239)) and (v137==(0 + 0))) then local v277=0;while true do if ((v277==(987 -(503 + 483))) or ((5905 -(1408 + 544))<=(1998 -(312 + 1521)))) then v137=1;break;end if ((v277==((0 + 0) -0)) or ((5320 -(47 + 170 + 137))<=3848)) then v138=v85[5 -3 ];v139={};v277=1 + 0 + 0 ;end end end if (((2572 + 1938)>(1188 + 267)) and (v137==(4 -(3 + 0)))) then for v292=4 -(1 + 2) , #v82 do local v293=0 -0 ;local v294;local v295;local v296;while true do if (((2074 -(107 + 416))<=(630 + 1310)) and (v293==(491 -(114 + 377)))) then v294=0 + 0 ;v295=nil;v293=1 + 0 ;end if (((3426 + (2412 -(600 + 1198)))>=(2732 + 230 + 152)) and ((1364 -(33 + (4394 -3064)))==v293)) then v296=nil;while true do if ((v294==(1 + 0)) or ((638 + 536)>=(593 + 3766))) then while true do if (((1523 -(486 + 1037))==v295) or ((9272 -7369)<(1053 + 563))) then v296=v82[v292];for v437=0 + 0 , #v296 do local v438=0 -0 ;local v439;local v440;local v441;local v442;while true do if ((v438==(1 + 0)) or (877>=(4375 -(793 + 371)))) then v441=nil;v442=nil;v438=4 -2 ;end if ((v438==(0 + 0)) or (2854>=(7747 -2826))) then v439=(0 + 0) -0 ;v440=nil;v438=1 + 0 ;end if (((3219 -(1419 + 373))>(663 + 713)) and (v438==(6 -4))) then while true do if (((690 -(426 -147))==411) and (v439==0)) then local v486=0 + 0 ;while true do if (((0 -0)==v486) or (((302 -158) + 4623)>=(6984 -2170))) then v440=v296[v437];v441=v440[1];v486=3 -2 ;end if (((4726 -(1096 + 393))>=(887 -(611 + 252))) and (v486==(1573 -(531 + 1041)))) then v439=(3636 -2288) -(178 + 1169) ;break;end end end if ((4824==((32642 -13814) -14004)) and (v439==(575 -(514 + 60)))) then v442=v440[120 -(19 + 99) ];if (((v441==v83) and (v442>=v138)) or ((2909 + 1183)<(9706 -7387))) then local v492=0 + 0 ;local v493;while true do if (((15185 -(4575 + 5656))>2859) and (v492==0)) then v493=309 -(122 + 187) ;while true do if (((32 + 2538)>=(899 + 1465)) and (v493==(0 -0))) then v139[v442]=v441[v442];v440[1 + 0 ]=v139;break;end end break;end end end break;end end break;end end end break;end end break;end if ((v294==(0 + 0)) or ((2168 -(161 + 151 + 31))>=4203)) then local v392=0 + 0 ;while true do if ((((856 -(120 + 736)) + 0)==v392) or (2679<=(3413 -(394 + 539)))) then v295=1471 -(218 + 1253) ;v296=nil;v392=1 + 0 ;end if ((v392==(1 + 0)) or (((4072 -2650) -(2874 -1995))>=(3400 -2063))) then v294=1;break;end end end end break;end end end break;end end else v83[v85[1 + 1 ]]={};end elseif (((3706 -(28 + 83))>=(1842 -(343 + 115 + 10))) and (v86<=(2 + 8))) then if ((v86<=(6 + 2)) or (3698<(2621 -(2111 -(526 + 107))))) then if ((v86>((4 -2) + 5)) or ((600 + 1136)>=(4358 -925))) then local v141=0 -(0 + 0) ;local v142;local v143;local v144;local v145;while true do if ((v141==(1035 -(129 + 906))) or ((1188 + 2707)>=(8178 -3184))) then v142=0 + (1514 -(777 + 737)) ;v143=nil;v141=1 -(0 -0) ;end if ((3934>(4166 -1175)) and (v141==2)) then while true do if ((v142==(1 + 0)) or ((3989 -1594)>4028)) then v145=0;for v343=v143,v85[1 + 3 ] do local v344=1521 -(94 + 1427) ;local v345;local v346;while true do if (((2427 + 933)<=4632) and (v344==(0 + 0))) then v345=0 + (1211 -(768 + 443)) ;v346=nil;v344=1 -0 ;end if ((v344==(2 -(2 -1))) or ((1676 -(854 + 574))>(2216 -(288 + 407)))) then while true do if ((v345==(318 -(4 + 314))) or (3452<=(3438 -(194 + 1233)))) then v346=0 -0 ;while true do if ((v346==(1989 -(508 + 1481))) or ((7457 -3508)==(6089 -3613))) then v145=v145 + 1 + (0 -0) ;v83[v343]=v144[v145];break;end end break;end end break;end end end break;end if (((4472 -((1931 -(328 + 1124)) + 520))>1414) and (v142==(0 + 0))) then local v310=0 -0 ;while true do if (((685 -431)<(3184 -1903)) and (v310==1)) then v142=1 + 0 ;break;end if ((v310==(0 -0)) or ((8670 -5391)<(3431 -2048))) then v143=v85[1 + 1 ];v144={v83[v143](v13(v83,v143 + (444 -(15 + 16 + 412)) ,v69))};v310=3 -2 ;end end end end break;end if (((2443 + 338 + 715)>964) and (v141==(1 -(331 -(294 + 37))))) then v144=nil;v145=nil;v141=1825 -(555 + 1268) ;end end elseif ((v83[v85[1974 -(1279 + 693) ]]==v85[5 -1 ]) or (1048==(3018 + 1523))) then v68=v68 + (2 -1) ;else v68=v85[3 + 0 ];end elseif ((v86==(1654 -(291 + 347 + 1007))) or ((640 + 116)==(4213 -(951 + 708)))) then if (v83[v85[477 -(330 + 145) ]] or (((3156 -(1256 + 576)) + 871)<(422 + 2))) then v68=v68 + 1 + 0 ;else v68=v85[1169 -(750 + 333 + 83) ];end else v68=v85[469 -(226 + 240) ];end elseif (((3017 -(316 + 1633))==(514 + 554)) and (v86<=(4 + 8))) then if (((58 + 17)<(2 + 775)) and (v86>(2 + 9))) then if ((v83[v85[2]]~=v83[v85[654 -(476 + 174) ]]) or ((787 -(229 + 84))>=(2229 -(584 + 257)))) then v68=v68 + 1 + 0 ;else v68=v85[3];end else local v147=0 + 0 ;local v148;local v149;while true do if ((2934<4286) and (v147==1)) then v83[v148 + 1 + 0 ]=v149;v83[v148]=v149[v83[v85[11 -7 ]]];break;end if (((271 + 56)==(1311 -(428 + 556))) and (v147==0)) then v148=v85[2 -0 ];v149=v83[v85[2 + 1 ]];v147=1 + (1922 -(608 + 1314)) ;end end end elseif (((6332 -3630)==(1695 + 1007)) and (v86>((1590 -(897 + 683)) + 3))) then if ((v85[990 -(474 + 514) ]<v83[v85[3 + 1 ]]) or ((947 + 628)>(4772 -(779 + 773)))) then v68=v68 + (1169 -(295 + 873)) ;else v68=v85[(505 + 809) -(839 + 472) ];end else v83[v85[2]]();end elseif (((1784 -(315 + 285))<(305 + 2558)) and (v86<=22)) then if (((670 -(28 + 2))==((3285 -(381 + 1553)) -711)) and (v86<=(685 -(602 + 65)))) then if (((1572 -(12 + 195))<=(2441 + 474)) and (v86<=((1427 -(694 + 708)) -9))) then if (((3131 -(197 + 341))<=(16073 -12176)) and (v86==(11 + 4))) then v83[v85[1659 -(701 + 956) ]]=v83[v85[3 + 0 ]]%v85[(3887 -2446) -(640 + 648 + 149) ] ;else v83[v85[1 + 1 ]][v85[1666 -(447 + 1216) ]]=v85[1 + 3 ];end elseif (((19110 -14411)>644) and (v86==(1778 -(660 + 1101)))) then v83[v85[1 + (1 -0) ]]=v83[v85[8 -5 ]] -v85[5 -(768 -(499 + 268)) ] ;else v83[v85[2]]=v83[v85[3]][v85[4]];end elseif ((v86<=(1949 -(1382 + 547))) or ((3768 -2001)<=((522 + 1984) -(200 + 620)))) then if ((v86>(6 + 13)) or ((3346 + 226)>3624)) then v83[v85[8 -6 ]][v85[1 + 2 ]]=v83[v85[1603 -((306 -164) + 1457) ]];else local v158=0 -0 ;local v159;local v160;while true do if (((1499 + 2675)>200) and (v158==0)) then v159=0 + 0 ;v160=nil;v158=(2086 -(433 + 329)) -(519 + (1175 -371)) ;end if (((1 + 0)==v158) or (((2761 -(852 + 26)) -1243)>=((5236 -(1611 + 271)) -933))) then while true do if (((0 -0)==v159) or ((5897 -((2877 -(853 + 865)) + 777))>=4378)) then v160=v85[687 -(470 + 215) ];v83[v160](v13(v83,v160 + (1 -0) ,v85[8 -5 ]));break;end end break;end end end elseif ((v86>(10 + 11)) or (3153<=2599)) then local v161=1993 -(471 + 1278 + 244) ;local v162;local v163;local v164;while true do if (((618 -(565 + 52))==v161) or ((438 + 1234)<=(583 + 322))) then v164=nil;while true do if ((v162==(0 + 0)) or ((10604 -6607)<(2174 + 1713))) then local v312=(148 + 432) -((838 -(179 + 231)) + 152) ;while true do if ((v312==0) or (4440<(3259 -1886))) then v163=v85[2];v164=v83[v85[5 -2 ]];v312=1069 -(26 + 375 + 667) ;end if (((11109 -6565)==4544) and ((360 -(115 + 244))==v312)) then v162=952 -(671 + 280) ;break;end end end if ((v162==(1 + 0)) or (1290==((3048 -2415) + 318 + 30))) then v83[v163 + 1 + 0 ]=v164;v83[v163]=v164[v85[244 -(230 + 10) ]];break;end end break;end if ((181<(14481 -9901)) and (v161==0)) then v162=0 + 0 ;v163=nil;v161=1634 -(719 + 914) ;end end else local v165=0 + 0 ;local v166;local v167;while true do if (((3165 + 1386)>(4258 -2681)) and (v165==0)) then v166=0 + 0 ;v167=nil;v165=962 -(27 + 934) ;end if ((3629>(2503 -(1370 + 315))) and (v165==(599 -(167 + 431)))) then while true do if ((2074>=(1266 -(253 + 972))) and ((0 + 0)==v166)) then v167=v85[2 -0 ];v83[v167]=v83[v167](v13(v83,v167 + (3 -2) ,v69));break;end end break;end end end elseif (((3895 -(61 + 128))==((2159 + 3068) -(716 + 805))) and (v86<=(20 + 6))) then if (((1699 + 3022)==(12511 -7790)) and (v86<=(1530 -(1292 + 214)))) then if (((3224 -(50 + 60))==(1562 + 1552)) and (v86>(7 + 16))) then if ((v83[v85[1 + 1 ]]~=v85[4]) or ((1339 -878)>=(575 + 1573))) then v68=v68 + (1 -0) ;else v68=v85[3];end else local v168=0 + 0 ;local v169;local v170;local v171;local v172;local v173;while true do if ((v168==(637 -(300 + 337))) or ((2423 -(296 + 369))>=(1015 + 2935))) then v169=0 + (373 -(128 + 245)) ;v170=nil;v168=1;end if ((2002>(3175 -(470 + 1474))) and (v168==(1363 -(80 + 1281)))) then v173=nil;while true do if ((((828 -(817 + 9)) + 0)==v169) or ((443 + (329 -(17 + 213)))>((41532 -27969) -(6672 + 2495)))) then while true do if ((v170==1) or ((1624 + 2630)<=1028)) then v173=v85[(1 + 5) -3 ];for v393=1 -0 ,v173 do v172[v393]=v83[v171 + v393 ];end break;end if (((129 + 4668)>(258 -107)) and (v170==(739 -(33 + 706)))) then local v370=0 -0 ;local v371;while true do if ((v370==(0 -0)) or ((32 -20)>3344)) then v371=0 -0 ;while true do if ((v371==(1 -0)) or ((4168 -(23 + 8 + 5))<(1842 + 617))) then v170=1;break;end if (((9382 -6511)>(1107 -(92 + 309))) and (v371==(1696 -((362 -181) + 1515)))) then v171=v85[(1 + 2) -1 ];v172=v83[v171];v371=1;end end break;end end end end break;end if ((1604<=3451) and (v169==(637 -(481 + 155)))) then local v318=0 + 0 + 0 ;while true do if ((v318==(1 + 0)) or ((240 + 446)>(4951 -(1501 + 494)))) then v169=1423 -(1199 + 222) ;break;end if ((v318==((1302 -(1271 + 31)) -0)) or ((1900 -(1584 + (222 -74)))>(16766 -12296))) then v172=nil;v173=nil;v318=256 -(198 + 57) ;end end end if (((3022 -(395 + 940))==(1525 + 162)) and (v169==(889 -(710 + 179)))) then local v319=491 -(408 + 83) ;while true do if (((0 -0)==v319) or (2217<=(2368 -(919 + 50)))) then v170=912 -(90 + 822) ;v171=nil;v319=1 -(0 -0) ;end if ((1==v319) or ((1801 -(276 + 244))>2653)) then v169=1 -(560 -(445 + 115)) ;break;end end end end break;end if (((1794 -(369 + 1424))==v168) or ((3338 -(1163 + 643))<=(3071 -(3623 -1568)))) then v171=nil;v172=nil;v168=2 + (0 -0) ;end end end elseif ((47<(4801 -(489 + 167))) and (v86==(1783 -(1525 + 233)))) then local v174=0 -0 ;local v175;while true do if ((0==v174) or ((12576 -8073)<=((31665 -17614) -9611))) then v175=v85[1 + 1 ];v83[v175](v83[v175 + 1 + 0 + 0 ]);break;end end elseif (((3300 + 107)>2906) and (v83[v85[106 -(40 + 64) ]]==v83[v85[4]])) then v68=v68 + 1 ;else v68=v85[1 + 2 ];end elseif ((v86<=(22 + 6)) or (2439<=(202 -107))) then if (((12672 -8780)>(1327 + 44)) and (v86>((99 + 22) -94))) then local v176=0 -0 ;local v177;local v178;while true do if ((v176==(0 -0)) or ((3755 -(641 + 262))>=(231 + 3029))) then v177=0 + (0 -0) ;v178=nil;v176=3 -2 ;end if ((v176==(2 -1)) or ((2088 -1218)>(11943 -7822))) then while true do if (((12394 -8384)==(15765 -(8126 + 3629))) and (v177==(0 -0))) then v178=v85[7 -5 ];v83[v178](v13(v83,v178 + 1 + 0 ,v69));break;end end break;end end else v83[v85[5 -3 ]]=v83[v85[3]][v83[v85[352 -(339 + 9) ]]];end elseif (((1119 -(442 + 13))<=((1050 + 1107) -(676 + 563))) and (v86==(917 -(316 + 572)))) then if (((6397 -2389)>=(969 -(419 -159))) and  not v83[v85[3 -1 ]]) then v68=v68 + 1 ;else v68=v85[928 -(784 + 141) ];end else v83[v85[2 + 0 ]]=v36[v85[3]];end elseif ((v86<=(6 + 40)) or ((907 + 1332)<=(8741 -6983))) then if (((3143 + 712)>=(501 + 13)) and (v86<=(1760 -(1303 + 419)))) then if ((v86<=(115 -81)) or (((8233 -4099) -2946)<(145 + 49))) then if ((v86<=(7 + 3 + 22)) or (((4075 -(472 + 1036)) + 2315)<(2754 -(255 + 312)))) then if ((3132>(1380 + 1386)) and (v86>((69 -46) + 8))) then local v183=0;local v184;local v185;while true do if ((((4818 -(1590 + 209)) -(92 + 477 + 733))<=(5315 -2346)) and (v183==(0 + 0))) then v184=0;v185=nil;v183=1 + 0 ;end if (((7813 -5242)<(18687 -13753)) and (v183==(1 + 0))) then while true do if (((2189 -565)<(4046 -(1082 + 439))) and (v184==(616 -(310 + 306)))) then v185=v85[2 + 0 ];v83[v185]=v83[v185](v83[v185 + 1 + 0 ]);break;end end break;end end else local v186=0 + 0 ;local v187;local v188;local v189;local v190;local v191;while true do if ((v186==(1980 -(1135 + 844))) or ((11562 -8098)<=574)) then v189=nil;v190=nil;v186=2;end if ((v186==2) or ((8275 -5094)>(9879 -5985))) then v191=nil;while true do if (((8641 -4948)>=((4015 -(151 + 201)) -1715)) and (v187==(2 + 0))) then while true do if (((5028 -(428 + 167))==(2538 + (2767 -(435 + 437)))) and (v188==1)) then local v372=0 -0 ;local v373;while true do if ((v372==(0 + 0)) or ((11360 -8950)>=4778)) then v373=0 -0 ;while true do if ((v373==(0 + 0)) or ((6074 -2556)==(796 + 1041))) then local v451=0 -0 ;while true do if (((2484 + 625)>=3013) and (v451==(800 -(661 + 138)))) then v373=1690 -(1216 + 473) ;break;end if (((336 -(302 + 34))==v451) or (1789<(1983 -(13 + 1830)))) then v191=v83[v189] + v190 ;v83[v189]=v191;v451=1;end end end if ((v373==(3 -(269 -(42 + 225)))) or ((1882 + 992)<=(1298 + 195))) then v188=2 -0 ;break;end end break;end end end if (((2 + 0)==v188) or (4532<(910 + 446))) then if (((674 -(157 + 156))<(1486 -(582 + 82))) and (v190>0)) then if ((v191<=v83[v189 + 1 ]) or ((6214 -(850 + 1146))==(4970 + 3 + 1))) then local v425=0;while true do if ((3816>=3568) and ((0 + 0)==v425)) then v68=v85[1277 -(440 + 834) ];v83[v189 + 3 + 0 ]=v191;break;end end end elseif (((3293 + 1656)==4949) and (v191>=v83[v189 + 1 + 0 ])) then local v426=(4024 -2512) -(757 + 755) ;local v427;while true do if (((3293 + 1020)>=((14345 -6394) -5611)) and ((1742 -(202 + 1540))==v426)) then v427=0 + 0 ;while true do if (((248 + 2451)>=(2085 -(570 + 478))) and (v427==0)) then v68=v85[3];v83[v189 + 3 + 0 ]=v191;break;end end break;end end end break;end if ((v188==(0 -0)) or ((3214 + 241)==(4594 + 389))) then local v374=0 + 0 ;local v375;while true do if (((33 + 601 + 2037)==2671) and ((0 -0)==v374)) then v375=1702 -(1158 + 544) ;while true do if (((1 + 0)==v375) or ((16413 -12454)<=(2348 -(755 + 1051)))) then v188=319 -(54 + 264) ;break;end if ((622<(1583 + (955 -381))) and (v375==(1495 -(801 + 534 + 160)))) then local v452=0 + 0 ;while true do if (((1020 -372)==(452 + 196)) and (v452==(0 + 0))) then v189=v85[1 + 0 + 1 ];v190=v83[v189 + (430 -(217 + 211)) ];v452=1;end if ((3038<(8150 -3613)) and (v452==(1 + (1089 -(914 + 175))))) then v375=1;break;end end end end break;end end end end break;end if ((v187==(12 -(4 + 8))) or ((10 + 2589)>=(16082 -11644))) then local v323=0 + 0 ;while true do if ((((3702 -(176 + 1458)) + 234)>=(560 -(6 + 101 + 157))) and (v323==(1164 -(856 + 307)))) then v187=1;break;end if ((v323==((2055 -(295 + 520)) -((251 -125) + 1114))) or (1473==(3536 -(155 + 52)))) then v188=0 -0 ;v189=nil;v323=1552 -(1151 + 400) ;end end end if (((2 -(1178 -(528 + 649)))==v187) or ((6134 -(716 + 806))<=(3641 -(1191 + 13)))) then local v324=0;while true do if ((v324==(1 + 0)) or (1194>(8490 -5278))) then v187=2 -0 ;break;end if ((((20133 -7526) -7708)>(720 + 567 + (866 -(247 + 169)))) and (v324==(350 -(200 + 150)))) then v190=nil;v191=nil;v324=4 -(3 + 0) ;end end end end break;end if (((5255 -1247)==(1398 + 2610)) and ((200 -(181 + 19))==v186)) then v187=0;v188=nil;v186=1 -0 ;end end end elseif (((1010 + 1252)<(5123 -2497)) and (v86>(134 -101))) then v83[v85[2]]=v34(v78[v85[3]],nil,v37);else v83[v85[2 -(0 + 0) ]][v83[v85[3]]]=v83[v85[2 + (1515 -(1175 + 338)) ]];end elseif ((v86<=(5 + 31)) or ((4183 -(76 + 1704))>=(4186 -(1057 + (515 -(225 + 268)))))) then if ((v86==(711 -(347 + 329))) or (4005<=(4108 -2192))) then local v195=0 -0 ;local v196;while true do if ((v195==(0 -0)) or (((1183 -(58 + 1094)) + 3227)==(8581 -6187))) then v196=v85[5 -3 ];v83[v196]=v83[v196](v13(v83,v196 + ((7062 -5544) -(726 + 791)) ,v85[1055 -(162 + 890) ]));break;end end else v83[v85[2 + 0 + 0 ]]=v83[v85[12 -9 ]] + v85[1705 -(894 + 807) ] ;end elseif ((v86>(109 -72)) or ((1641 -(1010 + 562))>2509)) then local v198=431 -(122 + 309) ;local v199;local v200;local v201;local v202;local v203;while true do if (((1505 -(987 + 4 + 23))<=2813) and (v198==(1019 -(835 + 183)))) then v201=nil;v202=nil;v198=2 -0 ;end if ((v198==2) or (3477<(592 -404))) then v203=nil;while true do if ((((1372 -(58 + 371)) + 30)<3347) and (v199==(2 -1))) then local v325=57 -(29 + 28) ;while true do if (((5443 -((1253 -634) + 459))>1147) and (v325==(0 + 0))) then v69=(v202 + v200) -(1 -0) ;v203=0 -0 ;v325=1 + 0 ;end if ((v325==(205 -(160 + (64 -20)))) or ((14 + 542)<=((827 -(178 + 323)) + 13))) then v199=3 -1 ;break;end end end if (((1071 -(679 + 392))==v199) or (1303>(5617 -(320 + 316)))) then local v326=0 -0 ;while true do if ((((3280 -(78 + 108)) -(418 + 557 + 443))==1676) and (v326==1)) then v199=2 -1 ;break;end if (((4700 -(238 + 43 + 57))>=(4572 -(328 + 319))) and (v326==(1754 -(1135 + 619)))) then v200=v85[2 + 0 ];v201,v202=v80(v83[v200](v83[v200 + 1 + (1606 -(1240 + 366)) ]));v326=213 -(56 + 156) ;end end end if (((2173 -(34 + 9))==(2055 + 75)) and (v199==(7 -(1466 -(582 + 879))))) then for v347=v200,v69 do local v348=(0 + 0) -0 ;local v349;while true do if (((4864 -3467)<(521 + 672 + 1704)) and (v348==(816 -(447 + 369)))) then v349=0 -0 ;while true do if ((v349==(0 -0)) or ((4196 -(725 + 496))==(3364 + 890))) then v203=v203 + (595 -(96 + 498)) ;v83[v347]=v201[v203];break;end end break;end end end break;end end break;end if ((v198==(0 -0)) or ((8774 -4284)>=4525)) then v199=0;v200=nil;v198=1 -0 ;end end else v83[v85[3 -1 ]]=v83[v85[(382 -(82 + 289)) -8 ]];end elseif ((v86<=(124 -(126 -(11 + 33)))) or ((1262 + 2707)<(1219 + 68))) then if ((((15252 -(584 + 721)) -(2657 + 6390))>=(7619 -(4063 + 856))) and (v86<=(145 -105))) then if ((v86>((444 -(29 + 314)) -62)) or ((1711 + 564)<=(111 + 229))) then local v206=0 -0 ;local v207;local v208;local v209;local v210;while true do if (((658 + 1731)==(3202 -(653 + 160))) and (((317 -130) -((278 -(22 + 177)) + 107))==v206)) then v209=nil;v210=nil;v206=2;end if ((v206==2) or ((4060 -(468 + 1408))>(3473 + 378))) then while true do if ((3250>(2073 -(578 + 782))) and (v207==1)) then v210=v83[v208 + (2 -0) ];if ((2902>=((1995 -(1762 + 17)) + 323 + 145)) and (v210>(0 -0))) then if ((v209>v83[v208 + 1 + 0 ]) or ((6448 -(71 + 1799))==(282 + 581))) then v68=v85[3];else v83[v208 + (6 -3) ]=v209;end elseif ((1748==((5202 + 807) -4261)) and (v209<v83[v208 + (3 -2) ])) then v68=v85[3 + 0 ];else v83[v208 + (1404 -(482 + 919)) ]=v209;end break;end if ((v207==(0 -0)) or (1245>((4145 -(12 + 34)) -(49 + 1513)))) then v208=v85[5 -3 ];v209=v83[v208];v207=1 + 0 ;end end break;end if (((562 -(378 + 184))==v206) or ((388 + (776 -310))>(3756 -(53 + 252)))) then v207=0 -0 ;v208=nil;v206=3 -2 ;end end else local v211=1019 -(98 + (1494 -(547 + 26))) ;local v212;local v213;local v214;while true do if ((v211==1) or ((9563 -6512)>=(4957 -(93 + 373)))) then v214=0 + 0 ;for v297=v212,v85[1830 -(1640 + 186) ] do local v298=0;local v299;local v300;while true do if (((1353 -(1148 + 205))==v298) or (3678<(886 + 755))) then v299=132 -(36 + 96) ;v300=nil;v298=1 + 0 ;end if ((v298==(1 -0)) or ((3060 -(902 + 646))<=((1248 + 70) -(83 + 119)))) then while true do if ((v299==(1314 -(183 + 1131))) or (199>3514)) then v300=0 -0 ;while true do if (((2460 + 1018)>552) and (v300==(0 -0))) then v214=v214 + 1 + 0 ;v83[v297]=v213[v214];break;end end break;end end break;end end end break;end if (((16457 -11878)==(11568 -6989)) and (v211==(0 + 0))) then local v286=0;while true do if ((v286==1) or ((1876 + 2968)<=(2592 -1280))) then v211=3 -2 ;break;end if ((v286==(0 -(0 -0))) or (3036==(8452 -5794))) then v212=v85[1195 -(1134 + 59) ];v213={v83[v212](v83[v212 + 1 + 0 ])};v286=1 + 0 ;end end end end end elseif (((48 -24)<(5928 -(547 + 511 + 43))) and (v86>(79 -38))) then local v215=0 -(0 -0) ;local v216;local v217;local v218;local v219;local v220;local v221;while true do if ((v215==(7 -4)) or ((3261 + 278)<=2144)) then while true do if ((v216==(1 + 1)) or (((6093 -(719 + 439)) -(949 + 740))>=(9153 -5333))) then local v331=(0 -0) + 0 ;while true do if ((v331==0) or ((12570 -(18089 -10112))==3334)) then for v400=1757 -(108 + 1648) ,v218 do v83[v219 + v400 ]=v220[v400];end v221=v220[1];v331=1340 -(671 + 668) ;end if ((v331==(248 -(127 + 120))) or ((5268 -(390 + 658))<(8266 -4065))) then v216=1170 -(221 + 946) ;break;end end end if (((3714 + 885)>=3437) and (v216==1)) then local v332=(69 -(42 + 27)) + 0 ;while true do if ((v332==(108 -(56 + 52))) or ((4333 -(22 + 378))>(13242 -8881))) then v219=v217 + 2 + 0 ;v220={v83[v217](v83[v217 + (436 -(297 + 138)) ],v83[v219])};v332=(100 -(18 + 81)) + 0 ;end if ((v332==(82 -(65 + 16))) or ((7977 -5696)==(120 + 480))) then v216=2;break;end end end if ((1515==(2267 -752)) and (v216==(693 -(321 + 369)))) then if (((994 + 788)<=(10574 -6867)) and v221) then local v351=0 -0 ;local v352;while true do if ((v351==(1430 -(529 + 77 + 824))) or ((2703 -((795 -(430 + 305)) + 108))==((13352 -8184) -((212 -119) + 287)))) then v352=848 -(615 + 233) ;while true do if ((((4809 -(41 + 792)) -2872)==(797 + 307)) and (v352==(0 -0))) then v83[v219]=v221;v68=v85[1520 -(1351 + 166) ];break;end end break;end end else v68=v68 + (2 -1) ;end break;end if (((2936 -(35 + 1359))<=(10487 -7237)) and (v216==(0 -0))) then local v333=212 -(85 + 127) ;while true do if ((v333==0) or ((4251 -1485)<((9574 -(424 + 952)) -5624))) then v217=v85[1979 -(1806 + 171) ];v218=v85[1458 -(1247 + 207) ];v333=1;end if ((v333==(1172 -(637 + 503 + 31))) or ((2659 -(293 + 233))>=(6814 -4432))) then v216=2 -1 ;break;end end end end break;end if (((6606 -3279)>=(5023 -3109)) and (v215==(5 -3))) then v220=nil;v221=nil;v215=5 -2 ;end if ((1==v215) or ((260 + 2199)==(8768 -5640))) then v218=nil;v219=nil;v215=2;end if ((v215==(0 + 0)) or ((1364 -(488 + 402))>(386 + 4019))) then v216=(714 -(14 + 700)) + 0 ;v217=nil;v215=1 -0 ;end end else do return;end end elseif ((v86<=(128 -84)) or ((550 -(4 + 63))>=(1560 -(7 + 85)))) then if ((v86==(702 -(400 + 259))) or ((4874 + 67)<=(286 + 300))) then v37[v85[1059 -(721 + (1772 -(280 + 1157))) ]]=v83[v85[840 -(240 + 598) ]];else local v224=0;local v225;local v226;while true do if ((v224==1) or (2382>=3153)) then while true do if (((4158 -2918)<=(6441 -4871)) and (v225==(1562 -((1503 -(1125 + 197)) + 1381)))) then v226=v83[v85[2 + 2 ]];if ((2682<=(3075 + 103)) and  not v226) then v68=v68 + (2 -1) ;else local v353=1192 -(964 + 228) ;local v354;local v355;while true do if (((3855 -1567)==2288) and ((560 -(160 + 103 + 297))==v353)) then v354=1658 -(1346 + 312) ;v355=nil;v353=828 -(550 + 277) ;end if (((2091 -(238 + 323))>=(2384 -((3169 -(176 + 1717)) + 363))) and ((1 + (1764 -(1238 + 526)))==v353)) then while true do if ((v354==(819 -(204 + 615))) or ((2513 -1187)>=(6370 -2573))) then v355=0;while true do if ((((1930 + 3448) -(150 + 761))==4467) and (v355==(0 + 0))) then v83[v85[2]]=v226;v68=v85[3];break;end end break;end end break;end end end break;end end break;end if (((584 + 2962)>(3441 -(1248 + 219))) and ((1761 -(844 + 917))==v224)) then v225=0 -0 ;v226=nil;v224=1971 -(1399 + 571) ;end end end elseif ((v86>((1915 -(360 + 576)) -(460 + 474))) or ((2718 -1854)>(1274 + 234))) then v83[v85[115 -(51 + 62) ]]=v83[v85[1300 -((884 -548) + 961) ]] -v83[v85[(42 -28) -10 ]] ;else v83[v85[(2046 -(355 + 1238)) -(301 + (1195 -(232 + 813))) ]]=v83[v85[3]]%v83[v85[4]] ;end elseif ((204==((264 + 680) -(2399 -1659))) and (v86<=(128 -74))) then if (((2931 -(691 + 25 + 630))<=(3664 -(237 + 268))) and (v86<=(81 -31))) then if (((4392 -2429)<=(3383 -(2 + 9 + 9))) and (v86<=(3 + 45))) then if ((3799>(557 + 323)) and (v86>47)) then v83[v85[2]]=v37[v85[10 -7 ]];else local v231=0 + 0 ;local v232;local v233;local v234;local v235;local v236;local v237;while true do if ((v231==0) or (1832>(6521 -2844))) then v232=0 -0 ;v233=nil;v231=1201 -(605 + 595) ;end if ((v231==1) or ((1062 -600)>=(12928 -(10254 -(650 + 43))))) then v234=nil;v235=nil;v231=2 + 0 ;end if (((5320 -(246 + 147))>=(6882 -3292)) and (v231==(1 + 1))) then v236=nil;v237=nil;v231=11 -8 ;end if (((208 -(100 + 105))==v231) or ((1442 -425)<=((556 -(5 + 291)) -120))) then while true do if ((3970>(4208 -(497 + 936))) and (v232==2)) then v237=nil;while true do if ((v233==(2 + 0)) or ((2114 -(29 + 101))<((8772 -6427) -1463))) then for v403=v234,v69 do local v404=0;local v405;while true do if (((2056 -(157 + (677 -194)))<=3357) and (((725 + 183) -(209 + 699))==v404)) then v405=0;while true do if ((v405==0) or ((2416 -(151 + 142))>=2332)) then v237=v237 + 1 ;v83[v403]=v235[v237];break;end end break;end end end break;end if ((3088<(1444 + 1979)) and (v233==1)) then local v380=0;local v381;while true do if (((2552 -789)>(1249 -(217 + 683))) and (v380==(0 -0))) then v381=0 -0 ;while true do if (((5887 -3514)<=(604 + 4252)) and (1==v381)) then v233=2 + 0 ;break;end if ((v381==((0 -0) + 0)) or (426>2261)) then v69=(v236 + v234) -1 ;v237=0 -0 ;v381=1;end end break;end end end if (((13977 -10251)>=(2388 -(1067 + 159))) and (v233==(0 -0))) then local v382=0 -0 ;while true do if ((v382==(1 + 0)) or ((1718 + 1209)==(1487 -(62 + 4)))) then v233=1 + 0 ;break;end if ((v382==(525 -(57 + 468))) or ((5765 -3604)<(3212 -(650 + 1046)))) then local v413=0 -0 ;while true do if ((v413==(1 + 0)) or ((3310 + 1390)==3900)) then v382=2 -1 ;break;end if (((5749 -(1086 + 57 + 584))<(11987 -(9410 -(677 + 843)))) and (v413==(0 -0))) then v234=v85[2];v235,v236=v80(v83[v234](v13(v83,v234 + (2 -(1739 -(919 + 819))) ,v69)));v413=1 + 0 ;end end end end end end break;end if (((402 -((618 -264) + 48))==v232) or (4283==(145 + 614))) then local v335=0 -0 ;while true do if ((v335==(0 -0)) or (((1259 + 740) -(659 + 1117))>(4421 -(1104 + 473)))) then v233=0;v234=nil;v335=1;end if ((v335==((1641 -(1046 + 594)) + (122 -(121 + 1)))) or ((137 + 510)>884)) then v232=1;break;end end end if (((6208 -(360 + 1489))==4359) and ((1 + 0)==v232)) then v235=nil;v236=nil;v232=1 + 1 ;end end break;end end end elseif (((3702 -(1622 + 327))<3171) and (v86>(452 -(348 + 55)))) then local v238=0 + 0 + 0 ;local v239;local v240;local v241;while true do if (((1545 -(364 + 163))==(262 + 756)) and (v238==1)) then v241=nil;while true do if (((1106 + 113)<(4545 -(10 + 213))) and (v239==(1783 -(1692 + 90)))) then for v350=v240 + 1 ,v85[4 + 0 ] do v241=v241   .. v83[v350] ;end v83[v85[1995 -(100 + 1893) ]]=v241;break;end if (((2005 -1586)>(1579 -(80 + 1414))) and ((0 + 0)==v239)) then v240=v85[1 + 2 ];v241=v83[v240];v239=1 + 0 ;end end break;end if ((v238==(1108 -(701 + 407))) or ((2925 -(762 + 498))>(1325 + 1418))) then v239=0 + 0 ;v240=nil;v238=483 -(306 + 176) ;end end else local v242=0;local v243;local v244;local v245;while true do if ((((3560 -1004) + 1598)>=(3020 -(1294 + 493))) and (v242==(1721 -(1063 + 658)))) then v243=0 + 0 ;v244=nil;v242=18 -(14 + 3) ;end if (((8624 -5539)<(9690 -(6790 -(490 + 1500)))) and (v242==(1 -0))) then v245=nil;while true do if ((v243==(0 + 0)) or (((3603 -(8 + 517)) -(119 + 1143))==(475 + 2094))) then local v339=692 -(643 + 49) ;while true do if ((v339==(1153 -(329 + 823))) or ((5849 -1959)>=4579)) then v243=1 -0 ;break;end if ((v339==0) or ((666 + 155)==770)) then v244=0 -0 ;v245=nil;v339=1;end end end if (((3499 -(1574 + 398))<(10208 -(7341 + 277))) and ((1618 -(427 + 1190))==v243)) then while true do if (((4255 + 336)==(13599 -(10287 -(1114 + 165)))) and (v244==0)) then v245=v85[1041 -(143 + 896) ];do return v83[v245](v13(v83,v245 + (863 -(236 + 626)) ,v85[6 -3 ]));end break;end end break;end end break;end end end elseif ((3398>(3 + 224)) and (v86<=52)) then if ((v86>(5 + 46)) or ((1404 -992)>=(3017 -(103 + 129)))) then local v246=0;local v247;local v248;while true do if ((v246==(0 + 0)) or (342==(1366 -548))) then v247=529 -(502 + 27) ;v248=nil;v246=1 + 0 ;end if ((2824==(8700 -5876)) and (v246==1)) then while true do if ((v247==(0 + 0)) or ((1928 + 303)==(4388 -(68 + 1684)))) then v248=v85[2];do return v13(v83,v248,v69);end break;end end break;end end else do return v83[v85[661 -(46 + 613) ]];end end elseif (((6075 -(1350 + 204))>=3370) and (v86>(1523 -((171 -123) + 1422)))) then v83[v85[1426 -(11 + 1413) ]][v83[v85[(6 + 0) -3 ]]]=v85[6 -2 ];else local v251=0 -0 ;local v252;local v253;local v254;local v255;while true do if (((1440 + 1640)>(1572 -(24 + 20 + 1008))) and (v251==(1504 -(405 + 1097)))) then while true do if (((121 -(65 + 55))==v252) or ((51 + 2464)>(11870 -7673))) then v255=nil;while true do if (((3134 -(327 + 31))==(1997 + 779)) and (v253==(820 -(649 + 170)))) then for v406=v254 + (411 -((624 -369) + 155)) ,v85[3] do v7(v255,v83[v406]);end break;end if (((2115 + 1479)<(861 + 2740)) and (v253==(0 -0))) then local v384=0 + 0 ;while true do if ((v384==0) or (1624>3119)) then v254=v85[2 + 0 ];v255=v83[v254];v384=1;end if ((v384==(2 -1)) or (3578<(5438 -(4398 -(37 + 1036))))) then v253=1 + 0 ;break;end end end end break;end if ((v252==0) or ((8404 -3418)<(1498 -(15 + 76 + 930)))) then local v341=0;while true do if ((v341==(1 -0)) or ((2079 -973)>=(5331 -(11 + 513)))) then v252=593 -(502 + 59 + 31) ;break;end if (((9233 -6750)>=(1810 -(1094 + 92))) and (v341==0)) then v253=0;v254=nil;v341=1 + 0 ;end end end end break;end if ((v251==(0 + 0)) or ((21946 -17290)<(3559 + 4))) then v252=0 -0 ;v253=nil;v251=3 -2 ;end if ((3679==3679) and (v251==(1265 -(1230 + 34)))) then v254=nil;v255=nil;v251=5 -3 ;end end end elseif ((v86<=(1109 -(765 + 286))) or ((2378 -(1194 + 21))>3581)) then if ((v86<=(26 + 30)) or (3189<=(585 + 1557))) then if ((v86==(37 + 18)) or ((1430 + 1740)>=(3138 + 385))) then local v256=0 -0 ;local v257;local v258;while true do if ((2154<=((6758 + 1775) -5344)) and ((0 -0)==v256)) then v257=(1054 -(312 + 469)) -(23 + 250) ;v258=nil;v256=1;end if (((10257 -6658)>((4733 -2478) -1060)) and (v256==1)) then while true do if ((v257==0) or ((3030 + 995)>=4298)) then v258=v85[3 -(1 + 0) ];do return v13(v83,v258,v258 + v85[3] );end break;end end break;end end else v83[v85[2 + 0 ]]=v85[3];end elseif ((((12815 -(635 + 73)) -(9302 -(363 + 167)))<=4227) and (v86>57)) then v83[v85[1 + 1 ]]= #v83[v85[(34 -22) -9 ]];elseif (((1703 + 1140)>(640 -(213 + 163))) and (v83[v85[5 -3 ]]<v85[4])) then v68=v68 + 1 + (0 -0) ;else v68=v85[(969 -630) -(161 + 175) ];end elseif ((v86<=60) or (4197<=(3390 -(51 + 147)))) then if (((7145 -5408)<(5078 -3050)) and (v86==(1 + 58))) then if (((1609 + 676)>=1529) and (v85[848 -(394 + 452) ]<v83[v85[7 -3 ]])) then v68=v85[585 -(125 + 457) ];else v68=v68 + (2 -1) ;end elseif ((v83[v85[5 -3 ]]<v83[v85[665 -(327 + 334) ]]) or (((1819 -795) -(691 + 102))>=(5369 -(290 + 571)))) then v68=v68 + 1 ;else v68=v85[3];end elseif ((v86==61) or ((712 + 280)>=2755)) then for v264=v85[1502 -(484 + 1016) ],v85[1385 -(1152 + 230) ] do v83[v264]=nil;end else v83[v85[2 + 0 ]]=v85[3 + 0 ] + v83[v85[429 -(162 + (1965 -(1557 + 145))) ]] ;end v68=v68 + (1 -(0 + 0)) ;break;end end end end A,B=v32(v11(v72));if  not A[1] then local v89=0;local v90;while true do if (v89==0) then v90=v35[4][v68] or "?" ;error("Script error at ["   .. v90   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
